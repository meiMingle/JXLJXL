// Generated by jextract

package com.unascribed.jxljxl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void* (*jpegxl_cms_init_func)(void* init_data,unsigned long num_threads,unsigned long pixels_per_thread,struct * input_profile,struct * output_profile,float intensity_target);
 * }
 */
public interface jpegxl_cms_init_func {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment init_data, long num_threads, long pixels_per_thread, java.lang.foreign.MemorySegment input_profile, java.lang.foreign.MemorySegment output_profile, float intensity_target);
    static MemorySegment allocate(jpegxl_cms_init_func fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$0.jpegxl_cms_init_func_UP$MH, fi, constants$0.jpegxl_cms_init_func$FUNC, scope);
    }
    static jpegxl_cms_init_func ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _init_data, long _num_threads, long _pixels_per_thread, java.lang.foreign.MemorySegment _input_profile, java.lang.foreign.MemorySegment _output_profile, float _intensity_target) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$0.jpegxl_cms_init_func_DOWN$MH.invokeExact(symbol, _init_data, _num_threads, _pixels_per_thread, _input_profile, _output_profile, _intensity_target);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


