// Generated by jextract

package com.unascribed.jxljxl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*JxlImageOutCallback)(void* opaque,unsigned long x,unsigned long y,unsigned long num_pixels,void* pixels);
 * }
 */
public interface JxlImageOutCallback {

    void apply(java.lang.foreign.MemorySegment opaque, long x, long y, long num_pixels, java.lang.foreign.MemorySegment pixels);
    static MemorySegment allocate(JxlImageOutCallback fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$18.JxlImageOutCallback_UP$MH, fi, constants$18.JxlImageOutCallback$FUNC, scope);
    }
    static JxlImageOutCallback ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _opaque, long _x, long _y, long _num_pixels, java.lang.foreign.MemorySegment _pixels) -> {
            try {
                constants$18.JxlImageOutCallback_DOWN$MH.invokeExact(symbol, _opaque, _x, _y, _num_pixels, _pixels);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


