// Generated by jextract

package com.unascribed.jxljxl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$18 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$18() {}
    static final FunctionDescriptor JxlDecoderGetExtraChannelBlendInfo$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle JxlDecoderGetExtraChannelBlendInfo$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderGetExtraChannelBlendInfo",
        constants$18.JxlDecoderGetExtraChannelBlendInfo$FUNC
    );
    static final FunctionDescriptor JxlDecoderImageOutBufferSize$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle JxlDecoderImageOutBufferSize$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderImageOutBufferSize",
        constants$18.JxlDecoderImageOutBufferSize$FUNC
    );
    static final FunctionDescriptor JxlDecoderSetImageOutBuffer$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlDecoderSetImageOutBuffer$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderSetImageOutBuffer",
        constants$18.JxlDecoderSetImageOutBuffer$FUNC
    );
    static final FunctionDescriptor JxlImageOutCallback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor JxlImageOutCallback_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle JxlImageOutCallback_UP$MH = RuntimeHelper.upcallHandle(JxlImageOutCallback.class, "apply", constants$18.JxlImageOutCallback_UP$FUNC);
    static final FunctionDescriptor JxlImageOutCallback_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle JxlImageOutCallback_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$18.JxlImageOutCallback_DOWN$FUNC
    );
    static final FunctionDescriptor JxlImageOutInitCallback$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor JxlImageOutInitCallback_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlImageOutInitCallback_UP$MH = RuntimeHelper.upcallHandle(JxlImageOutInitCallback.class, "apply", constants$18.JxlImageOutInitCallback_UP$FUNC);
}


