// Generated by jextract

package com.unascribed.jxljxl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$2 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$2() {}
    static final FunctionDescriptor jpegxl_free_func$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor jpegxl_free_func_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle jpegxl_free_func_UP$MH = RuntimeHelper.upcallHandle(jpegxl_free_func.class, "apply", constants$2.jpegxl_free_func_UP$FUNC);
    static final FunctionDescriptor jpegxl_free_func_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle jpegxl_free_func_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$2.jpegxl_free_func_DOWN$FUNC
    );
    static final FunctionDescriptor JxlParallelRunInit$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor JxlParallelRunInit_UP$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlParallelRunInit_UP$MH = RuntimeHelper.upcallHandle(JxlParallelRunInit.class, "apply", constants$2.JxlParallelRunInit_UP$FUNC);
    static final FunctionDescriptor JxlParallelRunInit_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlParallelRunInit_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$2.JxlParallelRunInit_DOWN$FUNC
    );
    static final FunctionDescriptor JxlParallelRunFunction$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor JxlParallelRunFunction_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlParallelRunFunction_UP$MH = RuntimeHelper.upcallHandle(JxlParallelRunFunction.class, "apply", constants$2.JxlParallelRunFunction_UP$FUNC);
    static final FunctionDescriptor JxlParallelRunFunction_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlParallelRunFunction_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$2.JxlParallelRunFunction_DOWN$FUNC
    );
}


