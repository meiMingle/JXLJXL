// Generated by jextract

package com.unascribed.jxljxl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$17 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$17() {}
    static final FunctionDescriptor JxlDecoderSetOutputColorProfile$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlDecoderSetOutputColorProfile$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderSetOutputColorProfile",
        constants$17.JxlDecoderSetOutputColorProfile$FUNC
    );
    static final FunctionDescriptor JxlDecoderSetCms$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("set_fields_data"),
            Constants$root.C_POINTER$LAYOUT.withName("set_fields_from_icc"),
            Constants$root.C_POINTER$LAYOUT.withName("init_data"),
            Constants$root.C_POINTER$LAYOUT.withName("init"),
            Constants$root.C_POINTER$LAYOUT.withName("get_src_buf"),
            Constants$root.C_POINTER$LAYOUT.withName("get_dst_buf"),
            Constants$root.C_POINTER$LAYOUT.withName("run"),
            Constants$root.C_POINTER$LAYOUT.withName("destroy")
        )
    );
    static final MethodHandle JxlDecoderSetCms$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderSetCms",
        constants$17.JxlDecoderSetCms$FUNC
    );
    static final FunctionDescriptor JxlDecoderPreviewOutBufferSize$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle JxlDecoderPreviewOutBufferSize$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderPreviewOutBufferSize",
        constants$17.JxlDecoderPreviewOutBufferSize$FUNC
    );
    static final FunctionDescriptor JxlDecoderSetPreviewOutBuffer$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlDecoderSetPreviewOutBuffer$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderSetPreviewOutBuffer",
        constants$17.JxlDecoderSetPreviewOutBuffer$FUNC
    );
    static final FunctionDescriptor JxlDecoderGetFrameHeader$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle JxlDecoderGetFrameHeader$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderGetFrameHeader",
        constants$17.JxlDecoderGetFrameHeader$FUNC
    );
    static final FunctionDescriptor JxlDecoderGetFrameName$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle JxlDecoderGetFrameName$MH = RuntimeHelper.downcallHandle(
        "JxlDecoderGetFrameName",
        constants$17.JxlDecoderGetFrameName$FUNC
    );
}


