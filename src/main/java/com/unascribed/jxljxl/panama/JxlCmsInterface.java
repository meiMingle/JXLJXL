// Generated by jextract

package com.unascribed.jxljxl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     void* set_fields_data;
 *     jpegxl_cms_set_fields_from_icc_func set_fields_from_icc;
 *     void* init_data;
 *     jpegxl_cms_init_func init;
 *     jpegxl_cms_get_buffer_func get_src_buf;
 *     jpegxl_cms_get_buffer_func get_dst_buf;
 *     jpegxl_cms_run_func run;
 *     jpegxl_cms_destroy_func destroy;
 * };
 * }
 */
public class JxlCmsInterface {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("set_fields_data"),
        Constants$root.C_POINTER$LAYOUT.withName("set_fields_from_icc"),
        Constants$root.C_POINTER$LAYOUT.withName("init_data"),
        Constants$root.C_POINTER$LAYOUT.withName("init"),
        Constants$root.C_POINTER$LAYOUT.withName("get_src_buf"),
        Constants$root.C_POINTER$LAYOUT.withName("get_dst_buf"),
        Constants$root.C_POINTER$LAYOUT.withName("run"),
        Constants$root.C_POINTER$LAYOUT.withName("destroy")
    );
    public static MemoryLayout $LAYOUT() {
        return JxlCmsInterface.$struct$LAYOUT;
    }
    static final VarHandle set_fields_data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("set_fields_data"));
    public static VarHandle set_fields_data$VH() {
        return JxlCmsInterface.set_fields_data$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* set_fields_data;
     * }
     */
    public static MemorySegment set_fields_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.set_fields_data$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* set_fields_data;
     * }
     */
    public static void set_fields_data$set(MemorySegment seg, MemorySegment x) {
        JxlCmsInterface.set_fields_data$VH.set(seg, x);
    }
    public static MemorySegment set_fields_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.set_fields_data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void set_fields_data$set(MemorySegment seg, long index, MemorySegment x) {
        JxlCmsInterface.set_fields_data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle set_fields_from_icc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("set_fields_from_icc"));
    public static VarHandle set_fields_from_icc$VH() {
        return JxlCmsInterface.set_fields_from_icc$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * jpegxl_cms_set_fields_from_icc_func set_fields_from_icc;
     * }
     */
    public static MemorySegment set_fields_from_icc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.set_fields_from_icc$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * jpegxl_cms_set_fields_from_icc_func set_fields_from_icc;
     * }
     */
    public static void set_fields_from_icc$set(MemorySegment seg, MemorySegment x) {
        JxlCmsInterface.set_fields_from_icc$VH.set(seg, x);
    }
    public static MemorySegment set_fields_from_icc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.set_fields_from_icc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void set_fields_from_icc$set(MemorySegment seg, long index, MemorySegment x) {
        JxlCmsInterface.set_fields_from_icc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static jpegxl_cms_set_fields_from_icc_func set_fields_from_icc(MemorySegment segment, SegmentScope scope) {
        return jpegxl_cms_set_fields_from_icc_func.ofAddress(set_fields_from_icc$get(segment), scope);
    }
    static final VarHandle init_data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("init_data"));
    public static VarHandle init_data$VH() {
        return JxlCmsInterface.init_data$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* init_data;
     * }
     */
    public static MemorySegment init_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.init_data$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* init_data;
     * }
     */
    public static void init_data$set(MemorySegment seg, MemorySegment x) {
        JxlCmsInterface.init_data$VH.set(seg, x);
    }
    public static MemorySegment init_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.init_data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void init_data$set(MemorySegment seg, long index, MemorySegment x) {
        JxlCmsInterface.init_data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle init$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("init"));
    public static VarHandle init$VH() {
        return JxlCmsInterface.init$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * jpegxl_cms_init_func init;
     * }
     */
    public static MemorySegment init$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.init$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * jpegxl_cms_init_func init;
     * }
     */
    public static void init$set(MemorySegment seg, MemorySegment x) {
        JxlCmsInterface.init$VH.set(seg, x);
    }
    public static MemorySegment init$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.init$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void init$set(MemorySegment seg, long index, MemorySegment x) {
        JxlCmsInterface.init$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static jpegxl_cms_init_func init(MemorySegment segment, SegmentScope scope) {
        return jpegxl_cms_init_func.ofAddress(init$get(segment), scope);
    }
    static final VarHandle get_src_buf$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("get_src_buf"));
    public static VarHandle get_src_buf$VH() {
        return JxlCmsInterface.get_src_buf$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * jpegxl_cms_get_buffer_func get_src_buf;
     * }
     */
    public static MemorySegment get_src_buf$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.get_src_buf$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * jpegxl_cms_get_buffer_func get_src_buf;
     * }
     */
    public static void get_src_buf$set(MemorySegment seg, MemorySegment x) {
        JxlCmsInterface.get_src_buf$VH.set(seg, x);
    }
    public static MemorySegment get_src_buf$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.get_src_buf$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void get_src_buf$set(MemorySegment seg, long index, MemorySegment x) {
        JxlCmsInterface.get_src_buf$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static jpegxl_cms_get_buffer_func get_src_buf(MemorySegment segment, SegmentScope scope) {
        return jpegxl_cms_get_buffer_func.ofAddress(get_src_buf$get(segment), scope);
    }
    static final VarHandle get_dst_buf$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("get_dst_buf"));
    public static VarHandle get_dst_buf$VH() {
        return JxlCmsInterface.get_dst_buf$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * jpegxl_cms_get_buffer_func get_dst_buf;
     * }
     */
    public static MemorySegment get_dst_buf$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.get_dst_buf$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * jpegxl_cms_get_buffer_func get_dst_buf;
     * }
     */
    public static void get_dst_buf$set(MemorySegment seg, MemorySegment x) {
        JxlCmsInterface.get_dst_buf$VH.set(seg, x);
    }
    public static MemorySegment get_dst_buf$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.get_dst_buf$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void get_dst_buf$set(MemorySegment seg, long index, MemorySegment x) {
        JxlCmsInterface.get_dst_buf$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static jpegxl_cms_get_buffer_func get_dst_buf(MemorySegment segment, SegmentScope scope) {
        return jpegxl_cms_get_buffer_func.ofAddress(get_dst_buf$get(segment), scope);
    }
    static final VarHandle run$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("run"));
    public static VarHandle run$VH() {
        return JxlCmsInterface.run$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * jpegxl_cms_run_func run;
     * }
     */
    public static MemorySegment run$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.run$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * jpegxl_cms_run_func run;
     * }
     */
    public static void run$set(MemorySegment seg, MemorySegment x) {
        JxlCmsInterface.run$VH.set(seg, x);
    }
    public static MemorySegment run$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.run$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void run$set(MemorySegment seg, long index, MemorySegment x) {
        JxlCmsInterface.run$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static jpegxl_cms_run_func run(MemorySegment segment, SegmentScope scope) {
        return jpegxl_cms_run_func.ofAddress(run$get(segment), scope);
    }
    static final VarHandle destroy$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("destroy"));
    public static VarHandle destroy$VH() {
        return JxlCmsInterface.destroy$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * jpegxl_cms_destroy_func destroy;
     * }
     */
    public static MemorySegment destroy$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.destroy$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * jpegxl_cms_destroy_func destroy;
     * }
     */
    public static void destroy$set(MemorySegment seg, MemorySegment x) {
        JxlCmsInterface.destroy$VH.set(seg, x);
    }
    public static MemorySegment destroy$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JxlCmsInterface.destroy$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void destroy$set(MemorySegment seg, long index, MemorySegment x) {
        JxlCmsInterface.destroy$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static jpegxl_cms_destroy_func destroy(MemorySegment segment, SegmentScope scope) {
        return jpegxl_cms_destroy_func.ofAddress(destroy$get(segment), scope);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


