// Generated by jextract

package com.unascribed.jxljxl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * float* (*jpegxl_cms_get_buffer_func)(void* user_data,unsigned long thread);
 * }
 */
public interface jpegxl_cms_get_buffer_func {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment opaque, long size);
    static MemorySegment allocate(jpegxl_cms_get_buffer_func fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$0.jpegxl_cms_get_buffer_func_UP$MH, fi, constants$0.jpegxl_cms_get_buffer_func$FUNC, scope);
    }
    static jpegxl_cms_get_buffer_func ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _opaque, long _size) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$0.jpegxl_cms_get_buffer_func_DOWN$MH.invokeExact(symbol, _opaque, _size);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


